generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Entidades de UsuÃ¡rio -> User, Employer, Manager, Leader, RH, Commitee, Admin, Developer
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String

  role      UserRole
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  employer  Employer?
  manager   Manager?
  leader    Leader?
  rh        RH?
  committee Committee?
  admin     Admin?
  developer Developer?
  
  @@map("users")
}

enum UserRole {
  EMPLOYER
  MANAGER
  LEADER
  RH
  COMMITTEE
  ADMIN
  DEVELOPER
}

model Employer {
  id Int @id @default(autoincrement())
  userId Int @unique
  user User @relation(fields: [userId], references: [id])  

}

model Manager {
  id Int @id @default(autoincrement())
  userId Int @unique
  user User @relation(fields: [userId], references: [id])

}

model Leader {
  id Int @id @default(autoincrement())
  userId Int @unique
  user User @relation(fields: [userId], references: [id])

}

model RH {
  id Int @id @default(autoincrement())
  userId Int @unique
  user User @relation(fields: [userId], references: [id])

}


model Committee {
  id Int @id @default(autoincrement())
  userId Int @unique
  user User @relation(fields: [userId], references: [id])

}

model Admin {
  id Int @id @default(autoincrement())
  userId Int @unique
  user User @relation(fields: [userId], references: [id])

}

model Developer {
  id Int @id @default(autoincrement())
  userId Int @unique
  user User @relation(fields: [userId], references: [id])

}